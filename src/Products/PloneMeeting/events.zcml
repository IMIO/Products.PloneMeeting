<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:browser="http://namespaces.zope.org/browser"
           xmlns:five="http://namespaces.zope.org/five"
           xmlns:i18n="http://namespaces.zope.org/i18n"
           i18n_domain="PloneMeeting">

  <subscriber for=".interfaces.IMeetingItem
                   zope.lifecycleevent.interfaces.IObjectAddedEvent"
              handler=".events.onItemAdded" />

  <subscriber for=".interfaces.IMeetingItem
                   zope.lifecycleevent.IObjectModifiedEvent"
              handler=".events.onItemModified" />

  <subscriber for=".interfaces.IMeetingItem
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".events.onItemRemoved" />

  <subscriber for=".interfaces.IMeetingItem
                   zope.lifecycleevent.ObjectMovedEvent"
              handler=".events.onItemMoved" />

  <subscriber for=".interfaces.IMeetingItem
                   OFS.interfaces.IObjectClonedEvent"
              handler=".events.onItemCloned" />

  <subscriber for=".interfaces.IMeetingItem
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".events.onItemTransition" />

  <subscriber for=".interfaces.IMeetingItem
                   Products.DCWorkflow.interfaces.IBeforeTransitionEvent"
              handler=".events.onItemBeforeTransition" />

  <subscriber for=".interfaces.IMeeting
                   Products.DCWorkflow.interfaces.IBeforeTransitionEvent"
              handler=".events.onMeetingBeforeTransition" />

  <subscriber for=".interfaces.IMeetingItem
                   Products.Archetypes.interfaces.IEditBegunEvent"
              handler=".events.onItemEditBegun" />

  <subscriber for=".interfaces.IMeetingItem
                   Products.Archetypes.interfaces.IEditCancelledEvent"
              handler=".events.onItemEditCancelled" />

  <subscriber for=".interfaces.IMeeting
                   zope.lifecycleevent.interfaces.IObjectAddedEvent"
              handler=".events.onMeetingAdded" />

  <subscriber for=".interfaces.IMeeting
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".events.onMeetingTransition" />

  <subscriber for=".interfaces.IMeeting
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".events.onMeetingRemoved" />

  <subscriber for=".interfaces.IMeetingGroup
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".events.onGroupTransition" />

  <subscriber for=".interfaces.IMeetingGroup
                   OFS.interfaces.IObjectWillBeRemovedEvent"
              handler=".events.onGroupWillBeRemoved" />

  <subscriber for=".interfaces.IMeetingGroup
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".events.onGroupRemoved" />

  <subscriber for=".interfaces.IMeetingCategory
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".events.onCategoryTransition" />

  <subscriber for=".interfaces.IMeetingCategory
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".events.onCategoryRemoved" />

  <subscriber for="Products.PluggableAuthService.interfaces.events.IGroupDeletedEvent"
              handler=".events.onPloneGroupDeleted" />

  <!-- meetingadvice events -->
  <subscriber for=".content.advice.IMeetingAdvice
                   zope.lifecycleevent.IObjectModifiedEvent"
              handler=".events.onAdviceModified" />

  <subscriber for=".content.advice.IMeetingAdvice
                   plone.dexterity.events.EditFinishedEvent"
              handler=".events.onAdviceEditFinished" />

  <subscriber for=".content.advice.IMeetingAdvice
                   zope.lifecycleevent.interfaces.IObjectAddedEvent"
              handler=".events.onAdviceAdded" />

  <subscriber for=".content.advice.IMeetingAdvice
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".events.onAdviceRemoved" />

  <subscriber for=".content.advice.IMeetingAdvice
                   Products.DCWorkflow.interfaces.IAfterTransitionEvent"
              handler=".events.onAdviceTransition" />

  <subscriber for="imio.annex.content.annex.IAnnex
                   zope.lifecycleevent.interfaces.IObjectAddedEvent"
              handler=".events.onAnnexAdded" />

  <subscriber for="imio.annex.content.annex.IAnnex
                   plone.dexterity.events.EditFinishedEvent"
              handler=".events.onAnnexEditFinished" />

 <subscriber for="imio.annex.content.annex.IAnnex
                  collective.iconifiedcategory.interfaces.IIconifiedPrintChangedEvent"
             handler=".events.onAnnexToPrintChanged" />

 <subscriber for="imio.annex.content.annex.IAnnex
                  collective.iconifiedcategory.interfaces.IIconifiedSignedChangedEvent"
             handler=".events.onAnnexSignedChanged" />

  <subscriber for="imio.annex.content.annex.IAnnex
                   zope.lifecycleevent.IObjectModifiedEvent"
              handler=".events.onAnnexModified" />
 
  <subscriber for="imio.annex.content.annex.IAnnex
                   zope.container.interfaces.IObjectRemovedEvent"
              handler=".events.onAnnexRemoved" />

  <subscriber
    for="imio.annex.content.annex.IAnnex
         imio.annex.interfaces.IAnnexFileChangedEvent"
    handler=".events.onAnnexFileChanged"
    />

  <!-- DashboardCollection events -->
  <subscriber for="imio.dashboard.interfaces.IDashboardCollection
                   Products.Archetypes.interfaces.IObjectInitializedEvent"
              handler=".events.onDashboardCollectionAdded" />

</configure>
