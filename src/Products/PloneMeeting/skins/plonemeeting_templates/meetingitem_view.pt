<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="PloneMeeting">

  <body>
  <metal:title fill-slot="content-title">
      <tal:header replace="structure context/@@header" />
  </metal:title>
  <metal:description fill-slot="content-description">
   <tal:comment replace="nothing">Just hide the description as shown by default by Plone</tal:comment>
  </metal:description>

  <metal:fill fill-slot="content-core">
    <metal:body_macro define-macro="body"
                      tal:define="tool python: context.portal_plonemeeting;
                                  member context/@@plone_portal_state/member;
                                  dummy context/checkPrivacyViewable;
                                  meetingConfig python:tool.getMeetingConfig(context);
                                  meeting context/getMeeting;
                                  usedAttrs meetingConfig/getUsedItemAttributes;
                                  usedMeetingAttrs meetingConfig/getUsedMeetingAttributes;
                                  context_url context/absolute_url;
                                  showAdvices python: context.adapted().showAdvices()">

    <script language="javascript"
            tal:content="python: 'ploneEditor = \'%s\';' % (member.getProperty('wysiwyg_editor') or here.portal_properties.site_properties.default_editor)">
    </script>

    <tal:comment replace="nothing">Show navigation between items of the same meeting</tal:comment>
    <tal:itemNavigation tal:condition="nocall:meeting">
      <tal:itemNavigation replace="structure context/@@item-navigation-widget" />
    </tal:itemNavigation>

    <table width="100%" border="0" class="item-infos">
      <tr valign="top">
        <td width="50%" style="padding-right: 0.5em;" tal:define="proposingGroup python: context.getProposingGroup(theObject=True)">

            <tal:comment replace="nothing">Proposing group (when proposingGroupWithGroupInCharge is not used)</tal:comment>
            <tal:proposingGroupAndGroupInCharge condition="python: not 'proposingGroupWithGroupInCharge' in usedAttrs">
              <div class="discreet">
                  <span class="item_attribute_label"
                        i18n:translate="PloneMeeting_label_proposingGroup"></span>:&nbsp;&nbsp;
                  <tal:hasProposingGroup condition="nocall:proposingGroup">
                    <span tal:content="proposingGroup/Title" />
                    <metal:people use-macro="here/@@pm-macros/proposingGroupUsers"/>
                  </tal:hasProposingGroup>
                  <span tal:condition="not:nocall:proposingGroup">-</span>
              </div>
              <tal:comment replace="nothing">Groups in charge</tal:comment>
              <div class="discreet" tal:condition="python: groupsInCharge or 'groupsInCharge' in usedAttrs"
                                    tal:define="groupsInCharge python: context.getGroupsInCharge(includeAuto=True);">
                  <span class="item_attribute_label"
                        i18n:translate="PloneMeeting_label_groupsInCharge"></span>:&nbsp;&nbsp;
                  <tal:displayGroupsInCharge condition="groupsInCharge">
                      <span tal:content="python: context.displayValue(context.Vocabulary('groupsInCharge')[0], groupsInCharge)" />
                  </tal:displayGroupsInCharge>
                  <span tal:condition="not: groupsInCharge">-</span>
              </div>
            </tal:proposingGroupAndGroupInCharge>

            <tal:comment replace="nothing">Proposing group (when proposingGroupWithGroupInCharge is used)</tal:comment>
            <div class="discreet" tal:condition="python: 'proposingGroupWithGroupInCharge' in usedAttrs">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_proposingGroupWithGroupInCharge"></span>:&nbsp;&nbsp;
                <tal:hasProposingGroup condition="nocall:proposingGroup">
                  <span tal:condition="nocall:proposingGroup"
                        tal:content="proposingGroup/Title" />&nbsp;(<span tal:define="gic python: context.getGroupsInCharge(theObjects=True, first=True)"
                                                                          tal:condition="nocall:gic"
                                                                          tal:content="gic/Title" />)
                  <metal:people use-macro="here/@@pm-macros/proposingGroupUsers"/>
                </tal:hasProposingGroup>
                <span tal:condition="not:nocall:proposingGroup">-</span>
            </div>

            <tal:comment replace="nothing">Associated groups</tal:comment>
            <div class="discreet" tal:condition="python: 'associatedGroups' in usedAttrs"
                                  tal:define="associatedGroups context/getAssociatedGroups;">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_associatedGroups"></span>:&nbsp;&nbsp;
                <tal:displayAssociatedGroups condition="associatedGroups">
                    <span metal:use-macro="python: here.widget('associatedGroups', mode='view')" />
                </tal:displayAssociatedGroups>
                <span tal:condition="not: associatedGroups">-</span>
            </div>

            <tal:comment replace="nothing">Category</tal:comment>
            <tal:category condition="not:meetingConfig/getUseGroupsAsCategories">
            <div class="discreet"
                 tal:define="cat python: context.getCategory(True)">
                <span class="item_attribute_label"
                      tal:condition="not: meetingConfig/getUseGroupsAsCategories"
                      i18n:translate="PloneMeeting_label_category"></span>:&nbsp;&nbsp;
                <span tal:condition="nocall:cat" tal:content="cat/Title"></span>
                <span tal:condition="not:nocall:cat">-</span>
            </div>
            </tal:category>

            <tal:comment replace="nothing">Classifier</tal:comment>
            <div class="discreet"
                 tal:condition="python: 'classifier' in usedAttrs"
                 tal:define="classifier python: context.getClassifier(theObject=True)">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_classifier"></span>:&nbsp;&nbsp;
                <span tal:condition="nocall:classifier" tal:content="classifier/Title">-</span>
                <span tal:condition="not:nocall:classifier">-</span>
            </div>

            <tal:comment replace="nothing">Advices</tal:comment>
            <div class="discreet" tal:condition="showAdvices"
                                  tal:define="advisers context/displayAdvisers;">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_optionalAdvisers"></span>:&nbsp;&nbsp;
                <tal:displayAdvisers condition="advisers">
                    <span tal:replace="structure advisers">Advisers</span>
                </tal:displayAdvisers>
                <span tal:condition="not: advisers">-</span>
                â€” <a class="discreet"
                     tal:attributes="href string:${context_url}#advices"
                     i18n:translate="legend_details" i18n:domain="plone">Details</a>
            </div>

            <tal:comment replace="nothing">Copy groups for this item</tal:comment>
            <div class="discreet" tal:condition="context/isCopiesEnabled"
                                  tal:define="copyGroups context/getAllCopyGroups;">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_copyGroups"></span>
                <span class='fa fa-question-circle help-doc pmHelp'
                      i18n:attributes="title"
                      tal:attributes="title python: context.getCopyGroupsHelpMsg(meetingConfig)">
                </span>:&nbsp;&nbsp;
                <tal:displayCopyGroups condition="copyGroups">
                    <span tal:replace="structure context/displayCopyGroups">Copy groups</span>
                </tal:displayCopyGroups>
                <span tal:condition="not: copyGroups">-</span>
            </div>

            <tal:comment replace="nothing">Assembly and signatures</tal:comment>
            <tal:assembly_and_signatures condition="nocall:meeting">
              <tal:defines
                define="redefinedItemAssemblies python: context.redefinedItemAssemblies();
                        redefinedItemSignatures python: context.getItemSignatures(real=True) or context.getItemSignatories(real=True);
                        mayQuickEditItemAssembly context/mayQuickEditItemAssembly;
                        mayQuickEditItemSignatures context/mayQuickEditItemSignatures;">
              <div id="assembly-and-signatures"
                  onclick="togglePersonsCookie();;toggleDetails('collapsible-assembly-and-signatures');"
                  class="collapsible discreet">
                  <span class="meeting_attribute_label" i18n:translate="redefinable_assembly_and_signatures">
                      <span i18n:name="assembly" tal:define="class_to_use python: redefinedItemAssemblies and 'highlightValue' or ''"
                            tal:attributes="class class_to_use"
                            i18n:translate="meeting_assembly">Assembly</span>
                      <a i18n:name="assembly_edit" tal:condition="mayQuickEditItemAssembly" href="manage_item_assembly_form?initial_edit=1" class="link-overlay-pm">
                          <img src="edit.png"
                               tal:attributes="src string:${portal_url}/edit.png" />
                      </a>
                      <span i18n:name="assembly_edit" tal:condition="not:mayQuickEditItemAssembly" />
                      and
                      <span i18n:name="signatures" tal:define="class_to_use python: redefinedItemSignatures and 'highlightValue' or ''"
                            tal:attributes="class class_to_use"
                            i18n:translate="meeting_signatures">signatures</span>
                      <a i18n:name="signatures_edit" tal:condition="mayQuickEditItemSignatures" href="manage_item_signatures_form" class="link-overlay-pm">
                          <img src="edit.png"
                               tal:attributes="src string:${portal_url}/edit.png" />
                      </a>
                      <span i18n:name="signatures_edit" tal:condition="not:mayQuickEditItemSignatures" />
                  </span>
              </div>
              <div id="collapsible-assembly-and-signatures" class="collapsible-content discreet" style="display: none;">
                <div class="collapsible-inner-content">
                  <tal:item_assembly tal:condition="python: ('assembly' in usedMeetingAttrs or meeting.getAssembly()) and not meeting.getAttendees()">
                      <tal:defines define="mayQuickEdit python: context.mayQuickEdit('itemAssembly', bypassWritePermissionCheck=True);
                                           class_if_highlighted python: redefinedItemAssemblies and 'highlightValue' or '';
                                           class_to_use python: mayQuickEdit and (class_if_highlighted and class_if_highlighted + ' item_attribute_label' or ' item_attribute_label') or class_if_highlighted + ' item_attribute_label'">
                        <div>
                            <tal:comment replace="nothing">Display a label 'Attendees' if we use item excused and absents,
                                                           if only using 'assembly', the entire information is in this single field
                                                           where absents are striked.</tal:comment>
                            <tal:displayAssemblyLabel condition="python: ('assemblyExcused' in usedMeetingAttrs or 'assemblyExcused' in redefinedItemAssemblies) or ('assemblyAbsents' in usedMeetingAttrs or 'assemblyAbsents' in redefinedItemAssemblies) or ('assemblyGuests' in usedMeetingAttrs or 'assemblyGuests' in redefinedItemAssemblies)">
                                <span class="item_attribute_label"
                                      tal:attributes="class python: 'assembly' in redefinedItemAssemblies and 'item_attribute_label highlightValue' or 'item_attribute_label'"
                                      i18n:translate="attendees_for_item"></span>:&nbsp;&nbsp;
                            </tal:displayAssemblyLabel>
                            <span tal:replace="structure python: context.displayStrikedItemAssembly() or '-'">Assembly</span>
                        </div>
                        <div tal:condition="python: 'assemblyExcused' in usedMeetingAttrs or 'assemblyExcused' in redefinedItemAssemblies">
                            <span class="item_attribute_label"
                                  tal:attributes="class python: 'assemblyExcused' in redefinedItemAssemblies and 'item_attribute_label highlightValue' or 'item_attribute_label'"
                                  i18n:translate="PloneMeeting_label_itemAssemblyExcused"></span>:&nbsp;&nbsp;
                            <span tal:replace="structure python: context.getItemAssemblyExcused() or '-'">Assembly excused</span>
                        </div>
                        <div tal:condition="python: 'assemblyAbsents' in usedMeetingAttrs or 'assemblyAbsents' in redefinedItemAssemblies">
                            <span class="item_attribute_label"
                                  tal:attributes="class python: 'assemblyAbsents' in redefinedItemAssemblies and 'item_attribute_label highlightValue' or 'item_attribute_label'"
                                  i18n:translate="PloneMeeting_label_itemAssemblyAbsents"></span>:&nbsp;&nbsp;
                            <span tal:replace="structure python: context.getItemAssemblyAbsents() or '-'">Assembly absents</span>
                        </div>
                      </tal:defines>
                  </tal:item_assembly>

                  <div tal:condition="python: ('attendees' in usedMeetingAttrs or meeting.getAttendees()) and not meeting.getAssembly()">
                    <tal:comment replace="nothing">People (item attendees, signers and votes)</tal:comment>
                    <metal:people use-macro="here/@@pm-macros/itemPeople"/>
                  </div>

                  <tal:item_assembly_common_fields>
                    <div tal:condition="python: 'assemblyGuests' in usedMeetingAttrs or 'assemblyGuests' in redefinedItemAssemblies">
                        <span class="item_attribute_label"
                              tal:attributes="class python: 'assemblyGuests' in redefinedItemAssemblies and 'item_attribute_label highlightValue' or 'item_attribute_label'"
                              i18n:translate="PloneMeeting_label_itemAssemblyGuests"></span>:&nbsp;&nbsp;
                        <span tal:replace="structure python: context.getItemAssemblyGuests() or '-'">Assembly guests</span>
                    </div>
                  </tal:item_assembly_common_fields>

                  <tal:comment replace="nothing">Item signatures</tal:comment>
                  <tal:item_signatures tal:condition="python: ('signatures' in usedMeetingAttrs or context.getItemSignatures()) and not meeting.getSignatories()">
                      <tal:defines define="class_if_highlighted python: redefinedItemSignatures and 'highlightValue' or '';
                                           class_to_use python: mayQuickEditItemSignatures and (class_if_highlighted and class_if_highlighted + ' item_attribute_label' or ' item_attribute_label') or class_if_highlighted + ' item_attribute_label'">
                        <div class="item_signatures">
                            <span class="item_attribute_label"
                                  tal:attributes="class string:${class_to_use}"
                                  i18n:translate="PloneMeeting_label_itemSignatures"></span>:&nbsp;&nbsp;
                            <span tal:replace="structure python: context.getItemSignatures(for_display=True) or '-'">Signatures</span>
                        </div>
                      </tal:defines>
                  </tal:item_signatures>
                </div>
              </div>
              </tal:defines>
              <script>
                initializePersonsCookie();
              </script>
            </tal:assembly_and_signatures>

            <tal:comment replace="nothing">Item keywords</tal:comment>
            <div class="discreet" tal:condition="python: 'itemKeywords' in usedAttrs">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_itemKeywords"></span>:&nbsp;&nbsp;
                <span tal:content="context/itemKeywords"></span>
            </div>

            <tal:comment replace="nothing">Item tags</tal:comment>
            <div class="discreet" tal:condition="python: 'itemTags' in usedAttrs">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_itemTags"></span>:&nbsp;&nbsp;
                <span tal:content="python: ', '.join(context.getItemTags())"></span>
            </div>

            <tal:comment replace="nothing">Linked items</tal:comment>
            <tal:defines define="predecessors python: context.adapted().getPredecessors(only_viewable=True);
                                 linkedItems python: context.getManuallyLinkedItems(only_viewable=True);
                                 showManuallyLinkedItems python: 'manuallyLinkedItems' in usedAttrs or linkedItems;
                                 class_to_use python: (predecessors or linkedItems) and 'item_attribute_label highlightValue' or 'item_attribute_label';">
                <div id="linkedItems" class="collapsible discreet" onclick="toggleDetails('collapsible-linked-items', toggle_parent_active=true, parent_tag=null, load_view='@@load_linked_items');">
                  <span tal:condition="showManuallyLinkedItems"
                        class="item_attribute_label"
                        tal:attributes="class class_to_use"
                        i18n:translate="linked_items_with_manually_linked_items">
                      Linked items, <span i18n:name="auto_linked_items" tal:content="python: len(predecessors)">4</span> automatically and <span i18n:name="manually_linked_items" tal:content="python: len(linkedItems)">0</span> manually
                  </span>
                  <span tal:condition="not:showManuallyLinkedItems"
                        class="item_attribute_label"
                        tal:attributes="class class_to_use"
                        i18n:translate="linked_items">
                      Linked items (<span i18n:name="auto_linked_items" tal:content="python: len(predecessors)">4</span>)
                  </span>
                </div>
                <div id="collapsible-linked-items" class="collapsible-content discreet" style="display: none;">
                  <div class="collapsible-inner-content">
                     <img tal:attributes="src string:${portal_url}/spinner_small.gif" />
                  </div>
                </div>
            </tal:defines>

            <div class="discreet"
                 tal:condition="python: 'itemIsSigned' in usedAttrs">
              <span class="item_attribute_label"
                    i18n:translate="PloneMeeting_label_itemIsSigned"></span>:&nbsp;&nbsp;
                <tal:itemIsSigned replace="structure context/@@item-is-signed" />
            </div>
            <div class="discreet"
                 tal:condition="python: 'takenOverBy' in usedAttrs">
              <span class="item_attribute_label"
                    i18n:translate="PloneMeeting_label_takenOverBy"></span>:&nbsp;&nbsp;
              <tal:defines define="meetingItem python: context;
                                   ajaxEdit python: True;">
               <metal:itemIsSigned use-macro="here/@@pm-macros/takenOverBy" />
              </tal:defines>
            </div>

            <tal:comment replace="nothing">Item emergency</tal:comment>
            <div class="discreet" tal:condition="python: 'emergency' in usedAttrs">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_emergency"></span>:&nbsp;&nbsp;
                <span data-base_url="#"
                   style="display: inline;"
                   tal:define="edit_css_classes python: context.mayQuickEdit('emergency') and 'tooltipster-item-emergency-change item_emergency Editable pmAction' or ''"
                   tal:attributes="data-base_url string:${context_url};
                                   class string:${edit_css_classes} item_${context/getEmergency}">
                    <span metal:use-macro="python: here.widget('emergency', mode='view')" />
                </span>
                <span class="discreet"> â€” <a href="item-emergency-history" class="link-overlay-pm" i18n:translate="" i18n:domain="plone">History</a></span>
            </div>

            <tal:comment replace="nothing">Item completeness</tal:comment>
            <div class="discreet" tal:condition="python: 'completeness' in usedAttrs">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_completeness"></span>:&nbsp;&nbsp;
                <span data-base_url="#"
                   style="display: inline;"
                   tal:define="edit_css_classes python: context.mayQuickEdit('completeness', bypassWritePermissionCheck=True) and 'tooltipster-item-completeness-change item_completeness Editable pmAction' or ''"
                   tal:attributes="data-base_url string:${context_url};
                                   class string:${edit_css_classes} item_${context/getCompleteness}">
                    <span metal:use-macro="python: here.widget('completeness', mode='view')" />
                </span>
                <span class="discreet"> â€” <a href="item-completeness-history" class="link-overlay-pm" i18n:translate="" i18n:domain="plone">History</a></span>
            </div>
        </td>
        <td width="50%" align="right">
            <tal:comment replace="nothing">Preferred meeting</tal:comment>
            <div class="discreet">
                <span class="item_attribute_label" i18n:translate="PloneMeeting_label_preferredMeeting"></span>:&nbsp;&nbsp;
                <span tal:define="preferred_meeting python:context.getPreferredMeeting(theObject=True)">
                <span tal:condition="nocall:preferred_meeting">
                      <tal:link tal:replace="structure preferred_meeting/getPrettyLink" />
                </span>
                <span tal:condition="not: nocall:preferred_meeting">-
                </span>
              </span>
            </div>

            <tal:comment replace="nothing">Meeting where this item is presented</tal:comment>
            <div class="discreet">
              <span class="item_attribute_label"
                    i18n:translate="presented_in_meeting">Presented in meeting</span>:&nbsp;&nbsp;
              <tal:hasMeeting condition="nocall:meeting">
                  <tal:link tal:replace="structure meeting/getPrettyLink">
                  </tal:link>
              </tal:hasMeeting>
              <span tal:condition="not:nocall:meeting">-</span>
            </div>

            <tal:comment replace="nothing">List type</tal:comment>
            <div class="discreet" tal:condition="nocall:meeting">
                <span data-base_url="#"
                   style="display: inline;"
                   tal:define="edit_css_classes python: context.mayQuickEdit('listType') and 'tooltipster-item-listtype-change item_listType Editable pmAction' or ''"
                   tal:attributes="data-base_url string:${context_url};
                                   class string:${edit_css_classes} item_attribute_label item_listType_${context/getListType}">
                    <span metal:use-macro="python: here.widget('listType', mode='view')" />
                </span>
            </div>

            <tal:comment replace="nothing">Send to authority?</tal:comment>
            <div class="discreet" tal:condition="python: 'sendToAuthority' in usedAttrs">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_sendToAuthority"></span>:&nbsp;&nbsp;
                <span metal:use-macro="python: here.widget('sendToAuthority', mode='view')" />
            </div>

            <tal:comment replace="nothing">Is acceptable out of meeting?</tal:comment>
            <div class="discreet" tal:condition="context/showIsAcceptableOutOfMeeting">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_isAcceptableOutOfMeeting"></span>:&nbsp;&nbsp;
                <span metal:use-macro="python: here.widget('isAcceptableOutOfMeeting', mode='view')" />
            </div>

            <tal:comment replace="nothing">Other MeetingConfigs Clonable To</tal:comment>
            <div class="discreet"
                 tal:condition="python: otherMCs or context.showClonableToOtherMeetingConfigs()"
                 tal:define="otherMCs context/getOtherMeetingConfigsClonableTo">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_otherMeetingConfigsClonableTo"></span>:&nbsp;&nbsp;
                <tal:displayOtherMeetingConfigsClonableTo tal:condition="otherMCs">
                    <span tal:replace="structure context/displayOtherMeetingConfigsClonableTo">Other mc clonable to (Emergency, privacy)</span>
                </tal:displayOtherMeetingConfigsClonableTo>
                <span tal:condition="not: otherMCs">-</span>
            </div>

            <tal:comment replace="nothing">Privacy</tal:comment>
            <div class="item_attribute_label"
                 tal:define="privacy context/getPrivacy"
                 tal:condition="python: ('privacy' in usedAttrs) and privacy">
              <span class="#" tal:attributes="class string:item_privacy_${privacy}" tal:content="privacy" i18n:translate="" />
            </div>

            <tal:comment replace="nothing">To discuss?</tal:comment>
            <div class="discreet" tal:condition="context/showToDiscuss">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_toDiscuss"></span>:&nbsp;&nbsp;
                <tal:to_discuss replace="structure python: context.restrictedTraverse('item-to-discuss')()" />
            </div>

            <tal:comment replace="nothing">Poll type</tal:comment>
            <div class="discreet" tal:condition="python: 'pollType' in usedAttrs">
                <span class="item_attribute_label"
                      i18n:translate="PloneMeeting_label_pollType"></span>:&nbsp;&nbsp;
                <span metal:use-macro="python: here.widget('pollType', mode='view')" />
                <tal:displayPollTypeObservations tal:condition="python: 'pollTypeObservations' in usedAttrs">
                    <span class="fa fa-question-circle help-doc"
                       id="showPollTypeObservations"
                       onclick="toggleDetails('dataPollTypeObservations', toggle_parent_active=false);"
                       i18n:attributes="title" title="show_or_hide_pollTypeObservations"></span>
                    <fieldset id="dataPollTypeObservations" style="display: none; margin-top: 0;">
                        <legend i18n:translate="PloneMeeting_label_pollTypeObservations">Poll type observations</legend>
                        <span metal:use-macro="python: here.widget('pollTypeObservations', mode='view')" />
                    </fieldset>
                </tal:displayPollTypeObservations>
            </div>

            <tal:comment replace="nothing">Oral question or item</tal:comment>
            <div class="discreet" tal:condition="python: 'oralQuestion' in usedAttrs">
             <tal:defines define="oq context/getOralQuestion">
              <tal:oral_question condition="oq">
               <img src="#" tal:attributes="src string:${portal_url}/oralQuestion.png">&nbsp;<span class="item_attribute_label" i18n:translate="this_item_is_an_oral_question">This item is an oral question</span>
              </tal:oral_question>
              <tal:not_oral_question condition="not: oq">
                <span class="item_attribute_label" i18n:translate="this_item_is_not_an_oral_question">This item is not an oral question</span>
              </tal:not_oral_question>
             </tal:defines>
            </div>

            <tal:comment replace="nothing">Item initiator</tal:comment>
            <div class="discreet" tal:condition="python: 'itemInitiator' in usedAttrs">
                <tal:defines define="itemInitiator context/getItemInitiator">
                    <span class="item_attribute_label" i18n:translate="PloneMeeting_label_itemInitiator"></span>:&nbsp;&nbsp;
                    <tal:block condition="itemInitiator">
                        <span metal:use-macro="python: here.widget('itemInitiator', mode='view')" />
                    </tal:block>
                    <span tal:condition="not: itemInitiator">-</span>
                </tal:defines>
            </div>
        </td>
      </tr>
    </table>

    <tal:comment replace="nothing">Description</tal:comment>
    <tal:field define="fieldName python: 'description'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>
    <tal:comment replace="nothing">Detailed description</tal:comment>
    <tal:field define="fieldName python: 'detailedDescription'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Budgetary informations, manage fields budgetRelated and budgetInfos</tal:comment>
    <tal:block condition="python: 'budgetInfos' in usedAttrs and member.has_permission('PloneMeeting: Read budget infos', context)">
    <fieldset>
      <legend i18n:translate="">Budget</legend>
        <p class="item-before-budget-related"></p>
        <metal:budgetInfos use-macro="here/@@pm-macros/budgetInfos" />

        <tal:displayBudgetInfos define="fieldName string:budgetInfos;
                                        ajaxEdit string:True;">
          <div id="hideBudgetInfosIfNotBudgetRelated"
                style="display: none;"
                tal:define="defaultDisplay python: context.getBudgetRelated() and 'block' or 'none';"
                tal:attributes="style string:display:${defaultDisplay};">
              <metal:f use-macro="context/@@pm-macros/viewContentField"/>
          </div>
        </tal:displayBudgetInfos>
    </fieldset>
    </tal:block>

    <tal:comment replace="nothing">Motivation</tal:comment>
    <tal:field define="fieldName python: 'motivation'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Decision</tal:comment>
    <tal:field define="fieldName python: 'decision'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">DecisionSuite</tal:comment>
    <tal:field define="fieldName python: 'decisionSuite'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Annexes and advices</tal:comment>
    <a name="adviceAndAnnexes"></a>
    <table width="100%" cellpadding="1" cellspacing="1"
           tal:define="showAnnexes python: tool.showAnnexesTab(context)"
            tal:condition="python: showAnnexes or showAdvices">
        <tr style="vertical-align: top;">
          <tal:annexes condition="showAnnexes">
            <td class="itemAnnexesCell" width="33%">
              <tal:annexes replace="structure context/@@display-annexes" />
            </td>
            <td width="33%" class="itemAnnexesCell">
              <tal:annexes replace="structure python: context.restrictedTraverse('@@display-annexes')(annex_portal_type='annexDecision', fieldset_legend='AnnexesDecisionShort')" />
            </td>
          </tal:annexes>
          <tal:comment replace="nothing">Advices</tal:comment>
          <td id="itemAdvicesCell" tal:condition="showAdvices">
              <fieldset class="section_advices" tal:define="meetingItem python: context">
              <legend><a name="advices" i18n:translate="PloneMeeting_label_advices">Advices</a></legend>
                  <tal:advice replace="structure context/@@advices-icons" />
              </fieldset>
          </td>
        </tr>
    </table>

    <tal:textCheckList condition="python: 'textCheckList' in usedAttrs and context.getTextCheckList()">
      <div id="textCheckList" class="collapsible discreet" onclick="toggleDetails('collapsible-text-checklist');">
        <span class="item_attribute_label" i18n:translate="PloneMeeting_label_textCheckList">
            Text check list
        </span>
      </div>
      <div id="collapsible-text-checklist" class="collapsible-content discreet" style="display: none;"
           tal:define="textCheckList context/getTextCheckList">
        <div class="collapsible-inner-content">
          <span tal:condition="textCheckList" tal:replace="structure context/getTextCheckList">Text check list</span>
          <span tal:condition="not:textCheckList" class="discreet" i18n:translate="">Nothing to display.</span>
        </div>
      </div>
    </tal:textCheckList>

    <tal:comment replace="nothing">In and out moves</tal:comment>
    <tal:field define="fieldName python: 'inAndOutMoves'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Notes</tal:comment>
    <tal:field define="fieldName python: 'notes'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Marginal notes</tal:comment>
    <tal:field define="fieldName python: 'marginalNotes'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Internal notes</tal:comment>
    <tal:field define="fieldName python: 'internalNotes'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Meeting managers notes</tal:comment>
    <tal:field define="fieldName python: 'meetingManagersNotes'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:comment replace="nothing">Observations</tal:comment>
    <tal:field define="fieldName python: 'observations'; ajaxEdit python:True">
       <metal:f use-macro="context/@@pm-macros/viewContentField"/>
    </tal:field>

    <tal:itemNavigation tal:condition="nocall:meeting">
      <tal:itemNavigation replace="structure context/@@item-navigation-widget" />
    </tal:itemNavigation>

    <tal:comment replace="nothing">Fields that appear only if the item is defined in a configuration</tal:comment>
    <tal:itemInConfig condition="context/isDefinedInTool">
      <tal:templateUsingGroups condition="python: context.isDefinedInTool(item_type='itemtemplate')">
        <div class="discreet itemtemplate-infos">
         <span class="item_attribute_label" i18n:translate="PloneMeeting_label_templateUsingGroups">Template using groups</span>:&nbsp;&nbsp;
         <span metal:use-macro="python: here.widget('templateUsingGroups', mode='view')" />
        </div>
      </tal:templateUsingGroups>

      <tal:transitionsForRecurring condition="python: context.isDefinedInTool(item_type='recurring')">
        <div class="discreet recurringitem-infos">
         <span class="item_attribute_label" i18n:translate="PloneMeeting_label_meetingTransitionInsertingMe">Meeting transition inserting me</span>:&nbsp;&nbsp;
         <span metal:use-macro="python: here.widget('meetingTransitionInsertingMe', mode='view')" />
        </div>
      </tal:transitionsForRecurring>

    </tal:itemInConfig>

    </metal:body_macro>
    </metal:fill>
  </body>
</html>
