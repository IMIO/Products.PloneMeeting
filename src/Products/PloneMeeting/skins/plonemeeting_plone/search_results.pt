<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en-US" lang="en-US"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="PloneMeeting">

<body>
  <tal:comment replace="nothing">Disable the Standard Plone green tab</tal:comment>
  <div metal:fill-slot="top_slot">
    <metal:block metal:use-macro="here/global_defines/macros/defines" />
    <div tal:define="dummy python:request.set('disable_border', 1)" />
  </div>

  <metal:title fill-slot="content-title">
   <tal:comment replace="nothing">Just hide the title as shown by default by Plone</tal:comment>
  </metal:title>
  <metal:description fill-slot="content-description">
   <tal:comment replace="nothing">Just hide the description as shown by default by Plone</tal:comment>
  </metal:description>

  <metal:main fill-slot="content-core"
     tal:define="tool python: context.portal_plonemeeting;
                 searchParams request/form;
                 searchTypes searchParams/search_types|python:[];
                 meetingConfig python: tool.get(searchParams['search_config'])">

  <script language="javascript"
          tal:content="python: 'configUrl = \'%s\';' % meetingConfig.absolute_url()">
  </script>
  <script language="javascript"
          tal:content='python: "searchParams = \"%s\";" % searchParams'>
  </script>
  <script language="javascript">
  function enableAnnexesMenus(rq, hook) {
    initializeMenusAXStartingAt(hook);
  }
  function askSearchResult(hookId, configUrl, topicId, batchStart,
                           sortKey, sortOrder, filterKey, searchSite, searchParams) {
    var enableMenus = null;
    var params = {'topicId': topicId, 'isFake':'True', 'b_start': batchStart-1,
                  'hookId' : hookId, 'searchParams': searchParams};
    if (sortKey) params['sortKey'] = sortKey;
    if (sortOrder) params['sortOrder'] = sortOrder;
    if (filterKey) {
      var filterWidget = document.getElementById(hookId + '_' + filterKey);
      if (filterWidget && filterWidget.value) {
        params['filterKey'] = filterKey;
        params['filterValue'] = filterWidget.value;
      }
    }
    if (hookId == 'searchedItems') enableMenus = enableAnnexesMenus;
    askAjaxChunk(hookId, 'GET', configUrl, 'plonemeeting-topic-result-macros',
                 'topicResult', params, null, enableMenus);
  }
  </script>

  <h1 class="documentFirstHeading">
    <span i18n:translate="heading_search_results" i18n:domain="plone"></span>
  </h1>

  <p class="discreet"><a tal:attributes="href python:context.absolute_url() + '/search_form'"
                         i18n:translate="search_again"></a></p>

  <tal:comment replace="nothing">Display matching items</tal:comment>
  <div id="searchedItems" tal:condition="python: 'search_type_items' in searchTypes">
    <div align="center"><img src="spinner.gif" tal:attributes="src string:${portal_url}/spinner.gif"/></div>
  </div>
  <br/>

  <tal:comment replace="nothing">Display matching meetings</tal:comment>
  <div id="searchedMeetings" tal:condition="python: 'search_type_meetings' in searchTypes">
    <div align="center"><img src="spinner.gif" tal:attributes="src string:${portal_url}/spinner.gif"/></div>
  </div>
  <br/>

  <tal:comment replace="nothing">Display matching annexes</tal:comment>
  <div id="searchedAnnexes" tal:condition="python: 'search_type_annexes' in searchTypes">
    <div align="center"><img src="spinner.gif" tal:attributes="src string:${portal_url}/spinner.gif"/></div>
  </div>

  <div>
    <script language="javascript" tal:condition="python: 'search_type_items' in searchTypes">
      askSearchResult("searchedItems", configUrl, "searchallitems", 1, '', '', '', '', searchParams=searchParams);
    </script>
    <script language="javascript" tal:condition="python: 'search_type_meetings' in searchTypes">
      askSearchResult("searchedMeetings", configUrl, "searchalldecisions", 1, '', '', '', '', searchParams=searchParams);
    </script>
    <script language="javascript" tal:condition="python: 'search_type_annexes' in searchTypes">
      askSearchResult("searchedAnnexes", configUrl, "searchallannexes", 1, '', '', '', '', searchParams=searchParams);
    </script>
  </div>

  </metal:main>

</body>
</html>
