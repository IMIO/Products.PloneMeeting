<tal:defines define="cfg python: view.cfg;
                     portal_url python: view.portal_url;
                     usedAttrs cfg/getUsedMeetingAttributes;
                     toLocalizedTime nocall: context/@@plone/toLocalizedTime;"
             i18n:domain="PloneMeeting">
  <div class="discreet">
  <tal:comment replace="nothing">Place</tal:comment>
  <tal:place condition="python: ('place' in usedAttrs) or context.getPlace()">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_place"></span>:&nbsp;&nbsp;
    <span tal:replace="context/getPlace"></span>&nbsp;&nbsp;
  </tal:place>

  <tal:comment replace="nothing">Start date</tal:comment>
  <tal:date condition="python: ('startDate' in usedAttrs) or context.getStartDate()">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_startDate"></span>:&nbsp;&nbsp;
    <span tal:replace="python:context.getStartDate() and toLocalizedTime(context.getStartDate(), long_format=1) or '-'"></span>&nbsp;&nbsp;
  </tal:date>

  <tal:comment replace="nothing">Mid date</tal:comment>
  <tal:date condition="python: ('midDate' in usedAttrs) or context.getMidDate()">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_midDate"></span>:&nbsp;&nbsp;
    <span tal:replace="python:context.getMidDate() and toLocalizedTime(context.getMidDate(), long_format=1) or '-'"></span>&nbsp;&nbsp;
  </tal:date>

  <tal:comment replace="nothing">End date</tal:comment>
  <tal:date condition="python: ('endDate' in usedAttrs) or context.getEndDate()">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_endDate"></span>:&nbsp;&nbsp;
    <span tal:replace="python:context.getEndDate() and toLocalizedTime(context.getEndDate(), long_format=1) or '-'"></span>&nbsp;&nbsp;
  </tal:date>
  <br/>

  <tal:comment replace="nothing">Approval date</tal:comment>
  <tal:date condition="python: ('approvalDate' in usedAttrs) or context.getApprovalDate()">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_approvalDate"></span>:&nbsp;&nbsp;
    <span tal:replace="python:context.getApprovalDate() and toLocalizedTime(context.getApprovalDate(), long_format=0) or '-'"></span>&nbsp;&nbsp;
  </tal:date>

  <tal:comment replace="nothing">Extraordinary session</tal:comment>
  <tal:extraordinarySession condition="python: ('extraordinarySession' in usedAttrs)">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_extraordinarySession"></span>:&nbsp;&nbsp;
    <metal:field use-macro="python:here.widget('extraordinarySession', mode='view', label=1)"/>
  </tal:extraordinarySession>
  <br/>
  </div>

  <div class="discreet" tal:condition="cfg/deadlinesAreEnabled">
  <tal:comment replace="nothing">Publish deadline</tal:comment>
  <tal:date condition="python: ('deadlinePublish' in usedAttrs) or context.getDeadlinePublish()">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_deadlinePublish"></span>:&nbsp;&nbsp;
    <span tal:replace="python:context.getDeadlinePublish() and toLocalizedTime(context.getDeadlinePublish(),long_format=1) or '-'"></span>&nbsp;&nbsp;
  </tal:date>
  <tal:date condition="python: ('deadlineFreeze' in usedAttrs) or context.getDeadlineFreeze()">
    <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_deadlineFreeze"></span>:&nbsp;&nbsp;
    <span tal:replace="python:context.getDeadlineFreeze() and toLocalizedTime(context.getDeadlineFreeze(),long_format=1) or '-'"></span>&nbsp;&nbsp;
  </tal:date>
  </div>

  <div
      onclick="togglePersonsCookie();;toggleDoc('collapsible-assembly-and-signatures');"
      tal:attributes="class python: (request.get('showPersons', 'true')=='true') and 'collapsible discreet active' or 'collapsible discreet'">
   <span class="meeting_attribute_label" i18n:translate="assembly_and_signatures">
     Meeting assembly and signatures
   </span>
  </div>

   <div class="collapsible-content" id="collapsible-assembly-and-signatures"
        tal:attributes="style python: (request.get('showPersons', 'true')=='true') and 'display: block;;' or 'display: none;;'">
    <div class="collapsible-inner-content">
     <tal:comment replace="nothing">Attendees, excused, absents, replacements, signatories</tal:comment>
     <table id="meeting_users" class="listing discreet" cellspacing="0" cellpadding="0"
            tal:condition="python: 'attendees' in usedAttrs and not context.getAssembly()">
       <tal:defines define="allUsers context/getAllUsedHeldPositions;
                            attendees context/getAttendees;
                            excused context/getExcused;
                            absents context/getAbsents;
                            signers context/getSignatories;
                            lateAttendees context/getLateAttendees;
                            useUserReplacements python: 'replacements' in usedAttrs;
                            userReplacements context/getUserReplacements;
                            showExcused python: 'excused' in usedAttrs or excused;
                            showAbsents python: 'absents' in usedAttrs or absents;
                            showSignatories python: 'signatories' in usedAttrs or signers;
                            itemAbsents python: context.getItemAbsents(by_absents=True);
                            itemSignatories python: context.getItemSignatories(by_signatories=True);">
         <tal:comment replace="nothing">Column captions</tal:comment>
         <thead>
         <tr>
           <th class="nosort"></th>
           <th class="nosort" i18n:translate="is_attendee"></th>
           <th class="nosort" tal:condition="showExcused" i18n:translate="is_excused"></th>
           <th class="nosort" tal:condition="showAbsents" i18n:translate="is_absent"></th>
           <th class="nosort" tal:condition="showSignatories" i18n:translate="is_signer"></th>
           <th class="nosort" tal:condition="useUserReplacements" i18n:translate="is_replaced"></th>
         </tr>
         </thead>
         <tbody>
         <tr tal:repeat="mUser allUsers">
           <tal:defines define="aUid mUser/UID">
             <td><b tal:content="mUser/get_short_title"></b></td>
             <td align="center">
               <span tal:condition="python: aUid in attendees" class="fa people-checked" ></span>
               <span tal:condition="python: aUid in itemAbsents"
                        class="tooltipster-meeting-item-absents fa people-left people-action"
                        tal:attributes="data-base_url string:${context/absolute_url};
                                        data-absent_uid string:${aUid};">
               </span>
             </td>
             <td align="center" tal:condition="showExcused">
               <span tal:condition="python: aUid in excused" class="fa people-checked" ></span>
             </td>
             <td align="center" tal:condition="showAbsents">
               <span tal:condition="python: aUid in absents" class="fa people-checked" ></span>
             </td>
             <td align="center" tal:condition="showSignatories">
              <tal:is_signer condition="python: aUid in signers">
               <span class="fa people-checked" ></span>
               <span tal:content="python: signers[aUid]" />
              </tal:is_signer>
              <span tal:condition="python: aUid in itemSignatories"
                       class="tooltipster-meeting-item-signatories fa people-signatory-replacer people-action"
                       tal:attributes="data-base_url string:${context/absolute_url};
                                       data-signatory_uid string:${aUid};">
              </span>

             </td>
             <td tal:condition="useUserReplacements">
               <span tal:condition="python: aUid in userReplacements" tal:content="python: context.displayUserReplacement(userReplacements[aUid])"></span>
               <span tal:condition="python: aUid in excused + absents and aUid not in userReplacements">-</span>

             </td>
           </tal:defines>
         </tr>
         </tbody>
       </tal:defines>
     </table>

     <tal:comment replace="nothing">Assembly and signatures.  Backward compatibility for people that used the 'assembly' or 'signatures'
field before and the 'attendees' now, if the field is not empty, we display it</tal:comment>
     <tal:assemblyFields condition="python: 'assembly' in usedAttrs or 'signatures' in usedAttrs or context.getAssembly() or context.getSignatures()">
       <tal:defines define="showAssemblyFields python: ((context.getAssembly() or 'assembly' in usedAttrs) and 'assembly',
                                                        (context.getAssemblyExcused() or 'assemblyExcused' in usedAttrs) and 'assemblyExcused',
                                                        (context.getAssemblyAbsents() or 'assemblyAbsents' in usedAttrs) and 'assemblyAbsents',
                                                        (context.getAssemblyGuests() or 'assemblyGuests' in usedAttrs) and 'assemblyGuests',
                                                        (context.getAssemblyProxies() or 'assemblyProxies' in usedAttrs) and 'assemblyProxies',
                                                        (context.getAssemblyStaves() or 'assemblyStaves' in usedAttrs) and 'assemblyStaves',
                                                        (context.getSignatures() or 'signatures' in usedAttrs) and 'signatures',);
                            colWidthPercentage python: int(100/len(showAssemblyFields));">
         <fieldset tal:condition="python: 'assembly' in showAssemblyFields">
             <legend tal:content="context/getLabelAssembly">Assembly</legend>
             <span tal:replace="structure python: context.getRawAssembly() and context.displayStrikedAssembly() or '<p>-</p>'"/>
         </fieldset>
         <fieldset tal:condition="python: 'assemblyExcused' in showAssemblyFields">
             <legend i18n:translate="meeting_assemblyExcused">Excused</legend>
             <span tal:replace="structure python: context.getAssemblyExcused() or '<p>-</p>'"/>
         </fieldset>
         <fieldset tal:condition="python: 'assemblyAbsents' in showAssemblyFields">
             <legend i18n:translate="meeting_assemblyAbsents">Absents</legend>
             <span tal:replace="structure python: context.getAssemblyAbsents() or '<p>-</p>'"/>
         </fieldset>
         <fieldset tal:condition="python: 'assemblyGuests' in showAssemblyFields">
             <legend i18n:translate="meeting_assemblyGuests">Guests</legend>
             <span tal:replace="structure python: context.getAssemblyGuests() or '<p>-</p>'"/>
         </fieldset>
         <fieldset tal:condition="python: 'assemblyProxies' in showAssemblyFields">
             <legend i18n:translate="meeting_assemblyProxies">Proxies</legend>
             <span tal:replace="structure python: context.getAssemblyProxies() or '<p>-</p>'"/>
         </fieldset>
         <fieldset tal:condition="python: 'assemblyStaves' in showAssemblyFields">
             <legend i18n:translate="meeting_assemblyStaves">Staves</legend>
             <span tal:replace="structure python: context.getAssemblyStaves() or '<p>-</p>'"/>
         </fieldset>
         <fieldset tal:condition="python: 'signatures' in showAssemblyFields">
             <legend i18n:translate="meeting_signatures">Signatures</legend>
             <span tal:replace="structure python: context.getSignatures(mimetype='text/x-html-safe') or '<p>-</p>'"/>
         </fieldset>
       </tal:defines>
     </tal:assemblyFields>
    </div>
   </div>

  <div class="discreet">
  <tal:comment replace="nothing">Pre-meeting info</tal:comment>
  <tal:pre condition="python: 'preMeetingDate' in usedAttrs">
  <span class="meeting_attribute_label" i18n:translate="pre_meeting"></span>:&nbsp;&nbsp;
  <span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_preMeetingDate"></span>:&nbsp;&nbsp;<span
     tal:replace="python: toLocalizedTime(context.getPreMeetingDate(),long_format=1)"></span>
  </tal:pre>
  <tal:prePlace tal:condition="python: 'preMeetingPlace' in usedAttrs">
    &nbsp;&nbsp;<span class="meeting_attribute_label" i18n:translate="PloneMeeting_label_preMeetingPlace"></span>:&nbsp;&nbsp;
    <span tal:replace="python: context.getPreMeetingPlace() or '-'"></span>
  </tal:prePlace>
  </div>
</tal:defines>