Products.PloneMeeting Changelog
===============================

Older versions than 3.0 can be found at http://svn.communesplone.org/svn/communesplone/PloneMeeting/tags/
- Versions 1.x are for Plone2.5
- Versions 2.x are for Plone3.x
- Versions 3.0.x are for Plone < 4.3
- Versions 3.1.+ are for Plone 4.3+

3.4 (unreleased)
----------------
- Moved to Plone 4.3.7
- Moved to collective.ckeditor 4.3.2
- Moved to collective.documentviewer 3.0.3
- Rely on beautifulsoup4, Products.CPUtils, collective.messagesviewlet
- Get rid of ArchGenXML, just use it for workflows generation
- Replaced own PODTemplate by the ConfigurablePODTemplate of collective.documentgenerator, removed appy.pod
  parameters from portal_plonemeeting and use the collective.documentgenerator control panel. Added back
  "mailing lists" functionnality that does not exist in collective.documentgenerator
- Moved dashboards and meeting view to imio.dashboard (see imio.dashboard package regarding required changes)
- MeetingFiles title is now indexed in items's SearchableText so it is possible to do a search on an annex
  title directly in the 'Search' field available on every dashboard searches (my items, all items, ...)
- Moved MeetingConfig.searchXXX searches to collective.compoundcriterion compatible search adapter
- Indexed the meetingUID and meetingDate on items so we are able to add a sortable 'meeting' column
- Moved 'history' functionnalities (highlight, displayed as table, ...) to imio.history and rely on it
- Moved the item title colorization and leading icons to imio.prettylink and rely on it.
  It is also used to colorize the meeting title displayed in columns 'meeting' and 'preferred meeting'
- Moved the 'getMeetingsAcceptingItems' from MeetingItem to MeetingConfig so it can be called
  when no item exist.  This is used in imio.pm.ws 'meetingsAcceptingItems' SOAP call
- Use MeetingItem.clone method to add recurring items to a meeting so it use same functionnality
  and extension mechanism regarding copyFields (fields to keep when cloning)
- Make sure it is still possible for MeetingManagers to edit itemAssembly and itemSignatures
  of items, even if it is decided, until the linked meeting is not considered closed
- Added field MeetingItem.manuallyLinkedItems that makes it possible to link an item to any other
  item of the application.  Back link is managed automatically so every linked items are all linked
  together and will build some kind of 'virtual folder'.  Items are sorted automatically chronologically
  descending.  Added possibility to define an icon to use to represent items of a MeetingConfig, this way,
  it is possible to differenciate items of different MeetingConfigs when these items are shown together
  in various places
- Added view '@@pm_utils' that make some utils available in various places and added
  method cropHTML that make sure a cropped HTML content is still valid
- Do not call the advice in the meetingadvice_workflow guard_expr because the advice could not be
  accessible and it can raises Unauthorized.  Instead, put the guard_expr logic in the guard expression itself
- If advices states are redefined for a given MeetingConfig on a MeetingGroup, make sure other MeetingConfig
  are not impacted, if nothing is defined on the MeetingGroup for another MeetingConfig, values defined on that
  other MeetingConfig are used
- Added parameter 'setCurrentAsPredecessor' to MeetingItem.clone method, making it possible to specify if we
  want the current item to be the predecessor of the newly created item.  This formalize something that is often
  done, and when 'ItemDuplicatedEvent' is called at the end of the 'clone', we have the set predecessor if necessary
- Hide the plone.contentactions viewlet on every PloneMeeting content types
- Field MeetingItem.observations is no more kept when an item is cloned
- Added icon to select/unselect every checkboxes of available items to present in a meeting like it is already
  the case for items presented in a meeting
- Added MeetingConfig.meetingPresentItemWhenNoCurrentMeetingStates attribute to define meeting states to take into
  account while getting the MeetingItem.getMeetingToInsertIntoWhenNoCurrentMeetingObject, this way, it is possible
  to only take into account future meetings accepting items that are in these defined states
- Adapted workflows to define an icon on transitions now that it is possible and that imio.actionspanel use this
  to get the icon to use for a transition
- In MeetingItem.updateAdvices, added hooks _itemToAdviceIsViewable, _adviceIsAddable and _adviceIsEditable to be
  able to make some advice behave a different way than the one defined in the application
- In MeetingItem.sendAdviceToGiveMailIfRelevant, added an adaptable call to a method _sendAdviceToGiveToGroup
  that make it possible to check if the mail must be sent to a given groupId or not.  This makes it possible
  to bypass some groups when sending the 'advice to give' notification
- When an advice is given (when the 'give_advice' transition is triggered), it is automatically versioned,
  we rely now on plone.app.versioningbehavior to display a historized version, moreover versioned advice is
  directly previewable in the @@historyview popup
- Added possibility to ask an advice several times, if it was never historized or if advice was modified
  since last historization, it is historized again
- Adapted the 'move item to position number' on the meeting view to move an item to an exact position and no
  more the 'position before the entered number'
- Added possibility to display the item reference in the item dashboards
- Removed Meeting.getAllItems and deprecated Meeting.getItemsInOrder that must be replaced by Meeting.getItems.
  Meeting.getItems does not receive a 'late=True/False' parameter anymore as we may have more than 'normal/late' for
  MeetingItem.listType, but receives now a list of listTypes that is by default empty ([]) meaning that it will
  return every items of the meeting
- Added MeetingItem.listType attribute that defines the fact that the item is 'normal' or 'late'.  Also added
  a 'on_list_type' item insertion method into a meeting.  These 'list types' are defined in the MeetingConfig, default
  listTypes ('normal' and 'late') may not be removed but other types of list may be added and order may be changed.
  Moreover the MeetingItem.listType may be quick edited thru the item or meeting view
- Updated the navigation widget on items to move to be able to move to the next viewable item even if it is not
  the very next item of the meeting
- Added possibility to print a meeting showing filtered items, like for example only "accepted" items
- Moved ToolPloneMeeting.getJavascriptMessages to a view generating 'plonemeeting_javascript_variables.js'
- Added icon action shortcut on an advice to hide/show it when under redaction
- Removed some fields from ToolPloneMeeting : 'usedColorSystem', 'colorSystemDisabledFor', 'publicUrl',
  'deferredNotificationsHandling' and 'showItemKeywordsTargets'. Moved 'maxShownFound' to the MeetingConfig
- Removed colorization mechanism 'on modification', now the only color system is 'on workflow state' and is always on
- Removed utils.spanifyLink
- Added events AdviceAfterAddEvent and AdviceAfterAddEvent so other package can register subscriber for
  it and be sure it is called after the PloneMeeting AdviceAdded and AdviceModified events
- Added new portal_types for recurring items (MeetingItemRecurring) and item templates (MeetingItemTemplate),
  this way we may remove the monkey patch about CatalogTool.searchResults and the 'isDefinedInTool' catalog index
- Mark base portal_types Meeting, MeetingItem, MeetingItemTemplate and MeetingItemRecurring global_allow=False
- Make sure item templates and recurring items are not searchable using the live search
- Added adaptable method MeetingItem._itemIsSignedStates that makes it possible to define in which states
  the MeetingItem.itemIsSigned field can be changed, by default it is when the item is decided
- Moved 'cleanRamCacheFor' and 'cleanVocabularyCacheFor' from ToolPloneMeeting to imio.helpers
- Removed overrides of DataGridField CheckBoxColumn and MultiSelectColumn now that we use newer
  versions of relevant package where this has been integrated
- Added possibility to generate a PodTemplate on an advice
- Enabled unload protection for CKEditor fields, this way if a change is made in a rich text field, a warning
  message is displayed to warn the user. Quick edit fields (rich text fields on item and meeting views) are
  protected as well
- Make MeetingItem.detailedDescription searchable
- Added possibility to use subnumber on items of the meeting so it is possible to use 1, 1.1, 1.2, ...
  for numbering items on the meeting, this way we may manage items "without a number"
- When redefining item assembly/excused/absents, show what is stored on the meeting for each fields, moreover,
  the default value of the field is now either the redefined value or the value defined on the meeting so a user
  does not have to copy/paste meeting's value to change it
- Display the 'pretty link' instead of the title on the item and meeting view so we have the enriched
  informations and we have the same rendering as on the dashboards
- While an item is sent to another meeting configuration and it is specified in the configuration that
  the sent item must be automatically presented in a next available meeting, make it possible to define
  emergency for the sent item so it can be inserted in a meeting in the future that is no more in 'created' state.
  Added also relevant leading icons to show an item 'to send' with emergency
- Added possibility to manually clone an item to another config.  It is now possible to define states in
  which an item may be sent manually and states in which an item will be sent automatically
- Added adaptable method MeetingItem._isViewableByPowerObservers that makes it possible to refine
  (restricted) power observers access to an item in addition to
  check on MeetingConfig.item(Restricted)PowerObserversStates
- For the workflowAdaptation "return_to_proposing_group", the custom workflow permissions defined in
  RETURN_TO_PROPOSING_GROUP_CUSTOM_PERMISSIONS are now defined by item workflow, so it is possible
  to use different values for different item workflows.  Likewise, the RETURN_TO_PROPOSING_GROUP_STATE_TO_CLONE
  is also defined by item workflow and the state_to_clone may come from another existing item workflow,
  not mandatorily from workflow the workflowAdaptation is applied on
- Added new richText field 'Meeting.inAndOutMoves/MeetingItem.inAndOutMoves' to be able to specifically
  encode in and out assembly members movements on an item or on a meeting
- Added new richText field 'Meeting.notes/MeetingItem.notes' to be able to specifically
  encode notes to be used in document generation (for example) on an item or on a meeting
- Every caches are invalidated when a MeetingConfig is edited so changing a parameter
  will invalidate caches for actions_panel, faceted filters vocabularies, ...
- Refactored the way localRoles are updated on item and meeting, do no more manage various cases,
  just one single call to updateLocalRoles that will update every relevant localRoles each time
  (copyGroups, powerObservers, advices, ...). This way we added a ItemLocalRolesUpdatedEvent to which
  a plugin may subscribe to adapt localRoles if needed. Do not call MeetingItem._updateAdvices directly,
  it is now a submethod of MeetingItem.updateLocalRoles
- Added caching for ToolPloneMeeting.userIsAmong
- ToolPloneMeeting.getGroupsForUser parameter 'suffix' is now 'suffixes' and receives
  a list of suffixes to consider when getting MeetingGroups the user is in
- Added Collection to 'search living items', returning every items supposed to be 'living', so items for which
  the workflow is not finished.  By default, it displays items that are not in the MeetingConfig.itemDecidedStates
- Added parameter MeetingConfig.historizeItemDataWhenAdviceIsGiven, True by default, this will historize
  relevant item data (title and enabled rich text fields) when an advice transition 'give_advice' is triggered,
  this way we may still know what was the state of the item when the advice was given in case item content changes
- MeetingItem.getAdviceDataFor returns now the real given meetingadvice object in key 'given_advice' if it was already
  given, if not given, this key contains None
- Changed parameter MeetingConfig.enableAnnexToPrint to have 3 possibilities : "disabled", "enabled for information",
  in this case annexes are set "to print" for information, it is not converted to printable format and these annexes need
  to be printed manually, last option is "for automated printing", in this case, annexes "to print" are converted to
  printable formats to be inserted in a generated Pod template.  Added also a faceted filter "annexes to print?" filtering
  items having annexes to print or not
- Bugfix when sending an item to another MC, the 'time' of the event was the 'time' of the last event, if resulting item
  was deleted then item was sent again, it used wrong 'time', now it uses the correct current time
- Use plone.api.env.adopt_user and plone.api.env.adopt_roles instead of getSecurityManager/setSecurityManager
- Show the next 'time limit' to give an advice directly in the advices icons so the user does not have to click
  on the different icons (not given, asked again, hidden) to know what is next 'time limit'.  The icon color is blue if current
  user is adviser for advice to give and is grey otherwise.  Moreover, to avoid loosing too much
  space in dashboards, advice icons are now displayed vertically in the dashboards and still horizontally on the item view
- Refactored the way auto copyGroups are handled : now it is evaluated upon each change and stored separately from manually
  selected copyGroups, this way it is possible to add or remove copyGroups automatically depending on the given
  expression.  Automatically added copyGroups are displayed with a [auto] label on the item view
- Added possibility to force an item to be presented among normal items in a frozen meeting: a checkbox is added under the
  available items on the meeting view when the meeting is frozen so checking this box will force presented items to be
  inserted as a normal item
- Removed condition that a meeting needed to contain items to be frozen,
  a meeting may now be frozen no matter it contains items or not
- Added method 'updateHolidays' on the Migrator to be able to easily update holidays.
  Holidays will now be updated for the 2 next years to avoid problems where holydays are updated too late.
  Added a collective.messagesviewlet warning message that is displayed to MeetingManagers if last defined holiday
  is in less than 60 days
- Added parameter MeetingConfig.keepAccessToItemWhenAdviceIsGiven, if set to True, the advisers of an advice that was
  given on an item will keep read access to the item, no matter the state in which the item is set thereafter.
  MeetingGroup.keepAccessToItemWhenAdviceIsGiven is also available so the value of the meetingConfig may be overrided
  for a given MeetingGroup

3.3 (2015-02-27)
----------------
- Moved to Plone 4.3.4
- Moved to collective.ckeditor 4.2.0
- Depends on plonetheme.imioapps to manage default skin (plonemeetingskin) and communesplone.layout
- Depends on Products.PasswordStrength and use defaut policy (10 characters, 1 uppercase, 1 special char, 1 number)
- Moved from communesplone.iconified_document_actions to collective.iconifieddocumentactions
- Moved management of indexes and metadatas (utils.updateIndexes) to imio.helpers and depends on that package now
- MeetingManagers are now managed locally, MeetingConfig by MeetingConfig,
  the global role 'MeetingManager' should not be given anymore to MeetingManagers
- Removed field Meeting.allItemsAtOnce and relative code
- Removed field MeetingCategory.itemsCount and relative code
- Refactored mechanism when inserting an item in a meeting : it is now possible
  to select successive sorting methods to apply on item insertion
- Added management of absents and excused in separated plain text fields,
  refactored display of item assembly and signatures on item
- Added restricted power observers, a second kind of power observers that may
  access elements in different states
- Added 'confidentiality' for annexes and advices, making them not visibile by power observers or
  restricted power observers, confidentialy is ajax switchable in the UI
- When sending an item to antoher meeting config, if both configurations use categories,
  added possibility to define for a category in original meeting configuration what will
  be the used category in the destination meeting configuration
- Added possibility to automatically trigger workflow transitions of an item that is sent
  to another meeting config so the new item can be automatically set in a defined state
  (for example : validated, proposed or presented in a meeting)
- It is now necessary to manually define transitions for presenting an item or a per
  meeting config basis so we know the "workflow path to present an item"
- Added possibility for advisers to hide their advice when it is under redaction
- Added possibility to easily change an advice delay from the advice popup view
  using a drop down box displaying available delays, with comments regarding changed delay and history
- When creating an item from a template, keep every informations defined on the template
- Optimized management of item templates, separated recurring items and item templates in two different
  folders (old 'recurringitems' now only contains recurring items and new 'itemtemplates' folder contains
  item templates), added possibility to organize item templates in folders.  Items templates displayed
  to the item creator shows this organization in folders using a 'fancytree', depends on collective.js.fancytree
- In MeetingConfig custom advisers, added possibility to restrict the selection of a custom
  adviser using a TAL expression (column 'Available on') and added a way to specify in that
  two or more custom advisers are linked together (column 'Is linked to previous row?')
- Added caching for MeetingConfg.getFileTypes, MeetingConfig.getCategories,
  ToolPloneMeeting.getGroupsForUser, IAnnexable.getAnnexesToPrint
- Link between a MeetingFile and a MeetingFileType is no more a Reference
- Added possibility to define sub-meetingFileTypes so a single MeetingFileType can have
  several subtypes displayed in the UI under the same icon
- Added possibility to define a correspondence of meetingFileTypes between different
  meeting configurations so an item sent to another meeting config know what meeting file
  type to use for original annexes
- Added 'emergency' functionnality on items (ask/accept/refuse emergency with comments and history)
- Added 'completeness' functionnality on items (evaulate if complete/incomplete with comments and history)
- Added 'Send to authority?' boolean field on items
- Added 'Taken over by' functionnality on items (a user may specify that he took over an item to
  avoid other users also being able to handle it to take it over)
- Refactored management of adviceIndex : index if advice can be added/edited, make use of another
  workflow than meetingadvice_workflow possible, ...
- Pass IAnnexable to a PodTemplate when rendering so we can easily integrate annexes in a generated document
- Removed IAnnexable.getAnnexesInOrder, only use IAnnexable.getAnnexes that is always ordered
- Added ajax switch in the UI for MeetingItem.budgetRelated displaying/hidding
  the MeetingItem.budgetInfos field on the item view
- Display PodTemplate description as plain/text on the PodTemplate view and in the title displayed
  when hovering the template label on the meeting/item view.  Display tthis description on the list
  of Pod Templates of the MeetingConfig as well
- Use collective.datagridcolumns for the MeetingFileType.subTypes field
- Refactored index 'indexAdvisers' to avoid relying on suffixes like '0' or '1', but
  using readable suffixes like '_advice_not_given', '_advice_delay_exceeded' or by displaying
  current advice workflow state as suffix
- Added parameter to hide history comments on an item to members outside the proposing group, access
  to comment of each history event is done in an adapter so it can be eaily overriden if necessary
- Do not use the 'Type' index in our searches, use the 'portal_type' index because 'Type' is indexing
  the 'Title' of the content type that may change, but 'portal_type' that index the 'id' will never changes
- Removed 'signatureNotAlone' from fields transform types, this is now managed by the 'keepWithNext'
  parameter passed to MeetingItem.getDecision or MeetingItem.getDeliberation
- Removed utils.getOsTempFolder method, use builtin tempfile.gettempdir python method instead
- Cleaned up utils, removed useless methods kupuEquals, allowManagerToCreateIn and disallowManagerToCreateIn
- Removed ToolPloneMeeting.ploneDiskAware functionnality and relative code
- Highlight 'History' link if a comment was added to last event of the history, to do so
  we override the documentby_line.pt template (the python viewlet was alredy overrided)
  and we remove nasty jQuery that was hidding link to author (removeLinkOnByLine)
- Make it possible to access item history directly from the item listings
  (using imio.actionspanel 'history' section)
- Optimized method that update advices nightly so only relevant items are updated, not
  every items like before (that was taking time for applications having several items)
- Added profiling.zcml that allows to activate collective.profiler during development
- Display every relevant informations about MeetingGroups, Categories and PodTemplates
  where it is listed (ToolPloneMeeting view and MeetingConfig view)
- Display annexes and advices fieldset on the item view in any cases, not hidding when empty
  or so, when no annex or no advice, a simple '-' is displayed in the fieldset
- Added topic to 'search items of my groups', returning every items of groups a user is
  in, no matter what role the user has in the group (creator, reviewer, adviser, ...)
- Added topic to 'validable items', returning every items the user may validate upon states
  of the item reviewing process.  Adapted topic that search 'items to validate' to only return
  items to validate of the highest hierarchic level of the current user
- MeetingItem.onDuplicated and MeetingItem.onDuplicatedFromConfig hooks are now zope.event events
- It is now possible to define in MeetingConfig.itemsListVisibleFields which fields of the items
  will be shown/hidden when using the 'glasses' icon action.  Those extra informations about
  the items are displayed in the items listings (my items, all items, ...) and in the different
  listings of the meeting view (available items, presented items and late items)
- An item can now be presented in a meeting from anywhere in the application
  (listings of items, item view, ...), clicking on the 'present' action will present
  the item to the next available meeting.  Before, the 'present' action was only shown in the
  list of available items of the meeting view
- On the item view, display the navigation widget also at the bottom of the view, just
  above the actions buttons
- Renamed ToolPloneMeeting.formatDate to ToolPloneMeeting.formatMeetingDate that now receives
  a meeting as first argument, no more a date or a brain
- Added field MeetingConfig.restrictAccessToSecretItems to be able the enable/disable the
  MeetingItem.isPrivacyViewable check.  Moreover, the isPrivacyViewable check now takes into account
  every explicit access given to the item, so members of the proposing group, super users (Managers,
  MeetingManagers, power observer), copy groups and advisers will have full access to the item
- Corrected bug where an item could be unpresentable if a preferredMeeting was selected on it
  and this preferred meeting was deleted leading this item to not be taken into account by the
  Meeting.getAvailableItems method
- It is now possible to display a topic in portlet_todo or in portlet_plonemeeting without having
  it to be displayed in both portlets.  This is done because now the TAL expression evaluated as
  condition to display the topic receive a 'fromPortletTodo' variable set to True or False and we
  can so discriminate if we want the topic to be displayed in only one of both portlets
- Added workflow adaptation "Pre-validation (reviewer may also prevalidate)" that add a pre-validation
  step but that let users in Plone group _reviewers able to "pre-validate" without being in
  the _prereviewers group.  This let's make difference between real prereviewers and reviewers
  but let reviewers prereview nevertheless
- Added an icon displayed before item title in listings that shows that an item will
  be sent to another meeting configuration so we can see items that will be send and
  items that have already been sent to another meeting configuration. Moreover, if item is actually
  sent and item sent to the other config is in a meeting, we display this meeting date in the icon's tooltip
- Added an icon displayed before item title in listings that shows that item was sent back in the
  workflow or that the item is at the same workflow step again (was already in that step before).
  This let's user see that an item was just corrected and sent back or that an item is proposed again
- Locking is now working when using the inline edit functionnality (quick edit of a item or
  meeting field thru the element view) and when quick editing an advice thru the popup
- Simplified tool defineable search parameters : no more max search limit, no more selectable
  item states, one single value for every dashboards about the elements to show per page
- MeetingManagers have now access to the meeting configurations and are able to edit
  "harmless" parameters like assembly and signatures
- Removed "PloneTask" related fields and functionnality
- Adapted functionnality around certified signatures defined on the MeetingConfig to make it
  "period-aware".  It is now possible to define a signature that will be useable for a period of time
  (from date, to date) so certified signatures can be managed in advance when knowing
  signatories absences/presences
- Added field MeetingGroup.certifiedSignatures useable to define current certified signatures to use in templates,
  if no certified signatures defined on the group, MeetingConfig.certifiedSignatures is used
- Ease management of late items, an item is now by default considered late if the meeting is in a late
  state and the available item is validated and the meeting is his preferred meeting
- Display warnings if annex file size is too large
- Added parameter MeetingConfig.itemCreatedOnlyUsingTemplate that will do user only able
  to create new items using an item template, no more item from scratch
- Added parameter MeetingConfig.onTransitionFieldTransforms that will make it possible to apply
  a transform to a given field of an item of a meeting when a transition is triggered on it.  It will
  in particular be used when the decision is changed when an item is delayed
- Added parameter MeetingConfig.onMeetingTransitionItemTransitionToTrigger that will make it possible
  to trigger arbitrary transitions on items of a meeting when a transition is triggered on that meeting
- A meeting is now considered modified (modification_date is changed) when an item is added, removed
  or it's position changed
- When the title of a MeetingGroup changed, the title of linked Plone groups is also changed accordingly
- Removed workflow adaptation 'local_meeting_managers'
- Added easy way to define a custom inserting method (order when an item is inserted in a meeting)
- Removed properties 'meetingRole' and 'meetingGroupId' from Plone groups created when adding
  a MeetingGroup, we use MEETINGROLES and MEETING_GROUP_SUFFIXES now
- Highlight lines that are empty at the end of a rich text field on the meeting and item view

3.2.0.1 (2014-03-06)
--------------------
- Bugfix release : adapted migration to 3.2.0
- Make computation of advice delay aware of work days and holidays
- Added caching for some methods called several times (ToolPloneMeeting.getMeetingGroups,
  ToolPloneMeeting.getMeetingConfig, MeetingConfig.getUserParam)
- Added possibility to have sub MeetingFileTypes : you can define subTypes on a given MFT,
  it will be displayed in the add annex select file type box but every annexes will be displayed
  behind the same icon of the master MeetingFileType, this let's user manage several mft title and
  predefined title
- Take 'for_item_created_until' into account for delay aware advisers in optional advisers
- Added improvement about internationalization in PloneMeeting tool workflow policy.
  [lcaballero, macagua]
- Make sure a MeetingGroup is not used in MeetingConfig.customAdvisers
  and MeetingConfig.powerAdvisersGroups before deleting it
- Make sure the MeetingFileType.relatedTo can not be changed if
  it is used in the application by a MeetingFile
- Display relatedTo information in the table showing defined MeetingFileTypes
- Added imio.actionspanel package in buildout "base.cfg" file.
  [lcaballero, macagua]
- Added more versions pinned in "versions-dev.cfg" file.
  [lcaballero, macagua]
- Added more support for internationalization in workflows.
  [lcaballero, macagua]
- Added more strings classifiers and metadata items for this package
  [lcaballero, macagua]

3.2.0 (2014-02-12)
------------------
- Not backward compatible with older versions if ExternalApplications were used as the class was dropped now
- Moved advices from saved dict to real objects so we can add annexes into it
- Added delay-aware advisers to be able to define delay for giving an advice
- Added custom advisers management on a per MeetingConfig basis : this manage automatic advisers and delay-aware advisers
- Refactored advice popups and dropdown to display more informations
- Added 'Power advisers' functionnality making it possible for some groups to give an advice even if not asked
- Added 'Budget impact editors' functionnality making it possible for some defined users to
  edit the MeetingItem.budgetInfos in defined item wf states
- Added specific permissions for managing the access to the MeetingItem.budgetInfos field :
  'PloneMeeting: Read budget infos' and 'PloneMeeting: Write budget infos' to manage in the item workflow
- Keep 'privacy' attribute when cloning an item so it is kept in functionnalities
  around (recurring items, item templates, item sent to another config, ...)
- Added method MeetingItem.printAdvicesInfos to generate a HTML version of advices infos useable in POD templates
- MeetingGroups can now override every MeetingConfig itemAdviceStates values, not only the default MeetingConfig
- Corrected bug in itemassembly/itemsignatures mass redifinition functionnality
  where late items were not taken into account
- Removed management of the 'Add portal content' permissions in every workflows
- Rely on plone.app.dexterity and plone.directives.form to manage new meetingadvice content_type
- Rely on imio.actionspanel
- Rely on Products.DataGridField to manage MeetingConfig.customAdvisers
- Rely on Products.cron4plone to launch maintenance task regarding delay-aware advices
  (update each item adviceIndex and update portal_catalog indexAdvisers index)
- Moved to collective.ckeditor 4.0.0

3.1.0 (2013-11-04)
------------------
- Moved to Plone 4.3.2
- Added functionnality to easily manage/propagate item assembly/signatures on several items
- Added topic searches 'search items to validate' and 'search items to prevalidate'
- Do not fail while adding an item in a meeting that contains items using a disabled category/proposing group
- Added possibility to send email notification upon each item transition
- Added wfAdaptation 'hide decision to users when under writing by meeting managers'
- Optimized MeetingItem.getItemNumber so working with 'relativeTo=meetingConfig' is performant and always returns
  the same result, no matter previous meetings are closed or not, no matter current user roles, ...
- Override the Products.Archetypes @@at_utils view, use current Github version as
  version in Plone 4.3.2 do not translate correctly in some cases
- Corrected copy_items when using meetingfolder_view to work between meetingfolder_view and others
- Corrected bug where history was not showing if historization was activated
- Do not avoid removal of a MeetingGroup if linked Plone groups still contains 'no found' users
- Added functionnality to adapt freshly created site front-page (at install time)
- Generate password for test users while detectng that we are creating a test instance
  for production purpose (created in a mount point)
- Use already existing (in Plone by default) delete_icon.png instead of our delete.png
- Removed use of deprecated cssQuery in plonemeeting.js
- Corrected bug where it was possible to remove a MeetingGroup still used in
  a MeetingConfig.selectableCopyGroups field or in a MeetingItem.copyGroups field
- Make sure vocabularies used for differents fields do contain terms corresponding
  to stored values on the object.  If term corresponding to stored value is not in the vocabulary,
  we add it to the vocabulary so it always works
- Use 20 instead of 10 for number of elements shown in result listings
- Adapted code in Meeting.validate_date as DateTime._localzone0/1 does not exist anymore
- Display signatures on the meeting_view correctly
- While deactivating a MeetingGroup, do not transfer users to the _observers Plone group,
  let users in their Plone groups so they still have access to old items and advices but make
  sure the deactivated group can no more be used anywhere
- Add missing PlonePAS 'Default Plone Password Policy' that is not in Plone 4.3.2
  if you migrated the site from an older version


3.0.3 (2013-08-19)
------------------
- Limited use of roles, removed MeetingPowerObserverLocal and MeetingObserverLocalCopy
- Added possibility to define states in wich items are viewable by copy groups
- Managed annexes conversion (collective.documentviewer) of duplicated items
- Removed ToolPloneMeeting.navigateLocally parameter
- If a user can not view an item anymore after having triggered a transition on it, display a clear message
- Create memberarea for user 'admin' at PloneMeeting install time
- Configure CKeditor styles at install time
- Moved events subscribers code from setuphandlers.py to events.py
- Defined helpers.py in tests so subplugins can override existing tests easily
- Added MeetingConfig.searchItemsWithFilters, a topic search configurable using a property defining filters on the relevant topic
- Added field MeetingItem.motivation that let the user have granularity while defining decision if he wants to split 'motivation' and 'decision'
- Make the search work while just entering beginning of a word
- Rely on imio.migrator
- Do not raise a WorkflowException in ToolPloneMeeting.triggerTransition if transition to trigger is not available, this avoid UI double click problems
- Let user access personal-information and change-password tabs in personal preferences
- Added wfAdaptation 'send back to proposing group for correction'
- Removed MeetingConfig.itemTopicStates parameter
- Advanced search parameters are now all activated by default

3.0.2 (2013-06-21)
------------------
- Adapted tests infrastructure to make it easy to override by a subproduct
- Adapted to work with Products.PloneHotfix20130618
- Ajax toggle to discuss take 3rd case (send an email) into account
- Moved "annexes_macros", "go to item" and "change items order" to BrowserViews
- Use Meeting.meetingClosedStates in Meeting.mayChangeItemsOrder to avoid subproduct to override it in most cases
- Optimized meetingfolder_view : added possibility to create an item from a template and lighter code

3.0.1 (2013-06-07)
------------------
- Added possibility to preview and print annexes (by converting them to images using collective.documentviewer)
- Show item and meeting history to users being able to see the object
- Show secret items to PowerObservers
- If connected user can not see the default home page defined in the MeetingConfig, redirect him to the first he can actually access
- Prevent to delete a used MeetingFileType or MeetingCategory
- Added tag 'strike' to the list of valid tags

3.0 (2013-04-03)
----------------
- Migrated to Plone 4
- Migrated MeetingFiles and PodTemplates to blobs
- Quick edition works with CKeditor
- Use Plone4 overlays to display popups
- Use communesplone.iconified_document_actions
- Display action icon on action buttons (do not use portal_actionicons anymore)
- Advices are now askable when the item is in his initial workflow state
- Display the elements history in the default Plone4 popup
- Optimized votes functionnality
- Added local powerobservers giving the possibility to define powerobservers by meetingConfig
- Copy groups to add automatically is now evaluated at each item edition, not only on creation
- Added possibility to decide several items at once when on a decided meeting
- Meeting's start date, mid date and end date have a granularity of 1 minute instead of 5 minutes

2.1.4dev
--------
- Nothing yet

2.1.3 (2012-10-03)
------------------
- Make the input showing the item number on the meeting view larger so 3-digit numbers are displayed correctly
- Make it possible for an external plugin to define extra fields to keep (copy) when sending an item to another meeting config (getExtraFieldsToCopyWhenCloningToOtherMC)

2.1.2 (2012-07-09)
------------------
- Added possibility to "duplicate and keep link" : duplicate an existing item and keep a link to the original item
- Corrected problems around groups UnicodeDecodeErrors (migration added)
- MeetingItem.itemInitiator field is now multivalued (migration added)
- Highlight itemAssembly and itemSignatures on the item view if it has been overridden
- Make item title longer (500 chars)
- Show the decision annexes everywhere (list of items, main item view, ...)

2.1.1 (2012-04-02)
------------------
- Added field MeetingConfig.certifiedSignatures useable to define current certified signatures to use on templates
- Item templates are now definable by proposingGroup
- Added MeetingItem.itemIsSigned optional field (indexed and use jQuery)
- You can now define in wich states, items for wich an advice has been given is still viewable by the advisers (MeetingConfig.itemAdviceViewStates)
- Added possibility to send an item to another meetingConfig and to keep track of it
- Search parameters from a topic are kept even when using a searchScript
- Always highlight the right meetingConfig tab even if the current item is not in the folder of the currently logged in user
- Added clickable action "update all advices" on portal_plonemeeting
- Highlight disabled elements in the configuration
- Removed field 'MeetingItem.closedSession', use 'MeetingItem.privacy' now
- Mailing lists conditions are now TAL expressions, no more Python exprressions

2.1.0 (2012-01-12)
------------------
- Added functionnality to track attendees movements during the meeting
  (entry and exit of people)
- Added "Late attendees" specifying the list of attendees that arrived after the meeting begin
- Optimized search, it is now possible to :
  - select the fields you want to search on (title, description, decision, all)
  - select the wf states to search on
- You can now select what item and meeting fields you want the builtin
  historization mechanism to historize
- Displayed persons on items and meetings can now be hidden by the user

2.0.7 (2011-08-16)
------------------
- Added possibility to search on the "decision" or "title and description"
- Access to user preferences can now be disabled
- Added site start date making it easier to remove archived elements before this date
- Added user synchronization mechanism between two PloneMeeting sites
- Annexes are now accessible from differents urls

2.0.6 (2011-06-28)
------------------
- Added deferred functionality for notifications system (nightwork imports and exports)
- Added new workflow adaptation :
  - skip publication state for meeting and meetingitems
- Added possibility to automatically set meeting numbering to zero every year

2.0.5 (2011-06-10)
------------------
- Added new workflow adaptations :
  - disable observations on items
  - item decision is reported by the item creator
  - only creators can delete their items
  - items are created in the "validated" state
  - archiving
- Added privacy field on item that give an information if it is secret or public
- Added back workflow transition actions on meetingConfig elements
- Added advices access (give and modify) on a per MeetingGroup basis
- Added external applications notifications system

2.0.4 (2011-05-24)
------------------
- Added "item templates" giving the possibility to create an item based on another item (template) defined in the configuration
- Added premeeting management (premeeting date, place and observations)
- Added deadline functionnality (items validation deadline, meeting freeze deadline, premeeting deadline)
- Added one new role called "MeetingPreReviewer" useable to prevalidate items
- Warn advisers that their advice is needed on an item (or no more needed)
- Added mailingLists to PodTemplate giving the possibility to configure differents mailing lists to send the generated template to
- Builtin second language support
- Optimization of the 'votes' functionnality
- Added MeetingConfig.workflowAdataptation field giving the possibility to select arbitrary wf behaviour
- Added MeetingConfig.transitionsToConfirm field giving a easy way to define a comment in a popup while choosen wf transitions of the Meeting or MeetingItem are triggered
- Added MeetingConfig.places field giving the possibility to define a list of selectable places useable on the Meeting
- Added MeetingConfig.budgetDefault field to define a default value for the MeetingItem.budgetInfos field
- Added MeetingConfig.toDiscussSetOnItemInsert field giving the choice for item creators to define the MeetingItem.toDiscuss field at creation time (or the old behaviour)
- Added MeetingConfig.toDiscussShownForLateItems field defining if the toDiscuss field should be used for late items
- Added MeetingUser.gender and MeetingUser.replacementDuty fields
- MeetingManagers can no more access every "in creation" or "proposed" items with the default workflows (meetingitem_workflow)
- Use config.MEETING_GROUP_SUFFIXES to create the Plone groups linked to a MeetingGroup while using a GroupDescriptor

2.0.3 (2011-04-13)
------------------
- Fix in clonePermissions about annexes

2.0.2 (2011-03-11)
------------------
- Do the meetingfolder_view work again in Plone3
- Some CSS/Translations/JS fixes
